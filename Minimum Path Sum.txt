public class Solution {
    public int minPathSum(int[][] grid) {
        int r=grid.length;
		int c=grid[0].length;
		int[][] res = new int[r][c];
		res[0][0] = grid[0][0];
		for(int i=1;i<r;++i){
	    	res[i][0]=res[i-1][0]+grid[i][0];
	    }
	    
	    for(int j=1;j<c;++j){
	    	res[0][j]+=res[0][j-1]+grid[0][j];
	    }
		
	    for(int i=1;i<r;++i){
	    	for(int j=1;j<c;++j){
	    		res[i][j]=Math.min(res[i-1][j], res[i][j-1])+grid[i][j];
	    	}
	    }
	    return res[r-1][c-1];
        // return MinPath(r-1,c-1,grid);
    }
    
    // //µÝ¹éµÄÇó½â
    // int MinPath(int i,int j,int[][] grid){
    //     if(i==0||j==0){
    //         return grid[0][0];
    //     }
    //     if(i==-1||j==-1){
    //         return Integer.MAX_VALUE;
    //     }
    //     return Math.min( MinPath(i-1,j,grid),MinPath(i,j-1,grid) )+grid[i][j];
        
    // }
}