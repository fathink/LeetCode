/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> postorderResults=new ArrayList<Integer>();
        if(root==null){
            return postorderResults;
        }
        
        Stack<TreeNode> stack=new Stack<TreeNode>();
        stack.push(root);
        TreeNode prev=null;
        while(!stack.isEmpty()){
            TreeNode curr=stack.peek();
            if(prev==null||prev.left==curr||prev.right==curr){
                if(curr.left!=null){
                    stack.push(curr.left);
                }
                else if(curr.right!=null){
                    stack.push(curr.right);
                }
                else{
                    stack.pop();
                    postorderResults.add(curr.val);
                }
            }
            else if(curr.left==prev){
                if(curr.right!=null){
                    stack.push(curr.right);
                }
                else{
                    stack.pop();
                    postorderResults.add(curr.val);
                }
            }
            else if(curr.right==prev){
                stack.pop();
                postorderResults.add(curr.val);
            }
            prev=curr;
        }
        
        return postorderResults;
    }
}